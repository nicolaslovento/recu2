//agregar 

int agregar(ArrayList* this)
{
    char nombre[7000];
    char apellido[7000];
    char email[7000];
    char genero[2];
    char profesion[7000];
    char nacionalidad[7000];
    char usuario[7000];
    int id;
    -* aux;
    clienteAux=newEmpleado();


    printf("Ingrese nombre :  ");
    fflush(stdin);
    gets(nombre);
    while(validarString(nombre)==1)
    {
        printf("Ingrese nombre :  ");
        fflush(stdin);
        gets(nombre);
    }
    setNombre(aux,nombre);

    printf("Ingrese apellido :  ");
    fflush(stdin);
    gets(apellido);
    while(validarString(apellido)==1)
    {
        printf("Ingrese apellido nuevamente(solo letras) :  ");
        fflush(stdin);
        gets(apellido);
    }
    setApellido(aux,apellido);

    printf("Ingrese genero [M o F]:  ");
    fflush(stdin);
    gets(genero);
    while(validarString(genero)==1)
    {
        printf("Ingrese genero nuevamente(solo letra)M o F :  ");
        fflush(stdin);
        gets(genero);
    }
    setGenero(clienteAux,genero);

    printf("Ingrese email: ");
    fflush(stdin);
    gets(email);
    setEmail(aux,email);

    printf("Ingrese profesion: ");
    fflush(stdin);
    gets(profesion);
    while(validarString(profesion)==1)
    {
        printf("Ingrese profesion nuevamente:  ");
        fflush(stdin);
        gets(profesion);
    }
    setProfesion(aux,profesion);


    printf("Ingrese usuario: ");
    fflush(stdin);
    gets(usuario);
    setUsuario(aux,usuario);


    printf("Ingrese nacionalidad: ");
    fflush(stdin);
    gets(nacionalidad);
    while(validarString(nacionalidad)==1)
    {
        printf("Ingrese nacionalidad nuevamente:  ");
        fflush(stdin);
        gets(nacionalidad);
    }
    setNacionalidad(aux,nacionalidad);

    setId(aux,getClienteId(this));

    al_add(this,aux);

}


//eliminar 

int eliminar(ArrayList* this)
{
    int id,index;
    char r;
    -* aux;
    printf("Ingrese id: ");
    scanf(" %d",&id);
    index=getClienteIndexById(this,id);
    if(index>-1)
    {
        aux=al_get(this,index);
        mostrarUnCliente(aux);
        printf("Esta seguro que desea eliminar el cliente? s/n: ");
        r=getche();
        if(r=='s')
        {
            al_remove(this,index);
            printf("\nEl cliente ha sido borrado.\n");

        }else
        {
            printf("\nOperacion cancelada.\n");
        }

    }else
    {
       printf("No se escuentra el id.\n");
    }

}

//modificar

void modificar(ArrayList* this)
{
    int id,index,opcion;
    -* clienteAux;
    char newNombre[50];
    char newApellido[50];
    char newEmail[50];
    printf("Ingrese id: ");
    scanf(" %d",&id);
    index=getAUXIndexById(this,id);
    if(index>-1)
    {
        aux=al_get(this,index);
        mostrarUno(aux);
        printf("Que desea modificar?..\n1.Nombre.\n2.Apellido.\n3.Email.\nOpcion: ");
        scanf(" %d",&opcion);
        switch(opcion)
        {
        case 1:
                printf("Ingrese nuevo nombre: ");
                fflush(stdin);
                gets(newNombre);
                strcpy(aux->nombre,newNombre);
            break;
        case 2:
                printf("Ingrese nuevo apellido: ");
                fflush(stdin);
                gets(newApellido);
                strcpy(aux->apellido,newApellido);
            break;
        case 3:
                printf("Ingrese nuevo email: ");
                fflush(stdin);
                gets(newEmail);
                strcpy(aux->email,newEmail);
            break;
        default:
            printf("Opcion incorrecta.\n");

            break;

        }

    }else
    {
       printf("No se escuentra el id.\n");
    }


}